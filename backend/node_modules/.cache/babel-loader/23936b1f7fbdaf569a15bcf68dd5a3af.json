{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Triger bot\\\\Documents\\\\GitHub\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ConfirmDeleteCardPopup from \"./ConfirmDeleteCardPopup\";\nimport api from \"../utils/Api\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\n  const [isConfirmDeleteCardPopupOpen, setConfirmDeleteCardPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(`Ошибка при загрузке информации о пользователе: ${err}`));\n  }, []);\n  useEffect(() => {\n    api.getInitialsCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err + \" карточки\");\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => console.log(`Ошибка: ${err}`));\n  }\n\n  function handleCardDelete(cardToDelete) {\n    api.removeCard(cardToDelete._id).then(() => setCards(cards.filter(card => card !== cardToDelete)));\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleUpdateUser(userData) {\n    api.editUserInfo(userData).then(newUser => {\n      setCurrentUser(newUser);\n      closeAllPopups();\n    }).catch(err => console.log(`Ошибка: ${err}`));\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    api.editAvatar(newAvatar).then(newUser => {\n      setCurrentUser(newUser);\n      closeAllPopups();\n    }).catch(err => console.log(`Ошибка: ${err}`));\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleAddPlace(card) {\n    api.postCard(card).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(`Ошибка при добавлении новой карточки: ${err}`));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups(),\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups(),\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups(),\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmDeleteCardPopup, {\n        isOpen: isConfirmDeleteCardPopupOpen,\n        onClose: closeAllPopups()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isImagePopupOpen,\n        onClose: closeAllPopups()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onAddPlace: handleAddPlaceClick,\n        onEditProfile: handleEditProfileClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        onLikeClick: handleCardLike,\n        onDeleteClick: handleCardDelete,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"kXJav1rEykyuTrTOyJ9OJDSiks8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Triger bot/Documents/GitHub/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","Header","CurrentUserContext","Main","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmDeleteCardPopup","api","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isImagePopupOpen","setImagePopupOpen","isConfirmDeleteCardPopupOpen","setConfirmDeleteCardPopupOpen","selectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","getUserInfo","then","res","catch","err","console","log","getInitialsCards","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","cardToDelete","removeCard","filter","handleEditAvatarClick","handleEditProfileClick","handleUpdateUser","userData","editUserInfo","newUser","closeAllPopups","handleUpdateAvatar","newAvatar","editAvatar","handleAddPlaceClick","handleCardClick","handleAddPlace","postCard"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport ConfirmDeleteCardPopup from \"./ConfirmDeleteCardPopup\";\r\nimport api from \"../utils/Api\";\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\r\n  const [\r\n    isConfirmDeleteCardPopupOpen,\r\n    setConfirmDeleteCardPopupOpen,\r\n  ] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  React.useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n      })\r\n      .catch((err) =>\r\n        console.log(`Ошибка при загрузке информации о пользователе: ${err}`)\r\n      );\r\n  }, []);\r\n  useEffect(() => {\r\n    api\r\n      .getInitialsCards()\r\n      .then((cards) => {\r\n        setCards(cards);\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log(err + \" карточки\");\r\n      });\r\n  }, []);\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\r\n        // Обновляем стейт\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => console.log(`Ошибка: ${err}`));\r\n  }\r\n  function handleCardDelete(cardToDelete) {\r\n    api\r\n      .removeCard(cardToDelete._id)\r\n      .then(() => setCards(cards.filter((card) => card !== cardToDelete)));\r\n  }\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  function handleUpdateUser(userData) {\r\n    api\r\n      .editUserInfo(userData)\r\n      .then((newUser) => {\r\n        setCurrentUser(newUser);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(`Ошибка: ${err}`));\r\n  }\r\n  function handleUpdateAvatar(newAvatar) {\r\n    api\r\n      .editAvatar(newAvatar)\r\n      .then((newUser) => {\r\n        setCurrentUser(newUser);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(`Ошибка: ${err}`));\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n  function closeAllPopups() {\r\n    setEditAvatarPopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setImagePopupOpen(true);\r\n    setSelectedCard(card);\r\n  }\r\n  function handleAddPlace(card) {\r\n    api\r\n      .postCard(card)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) =>\r\n        console.log(`Ошибка при добавлении новой карточки: ${err}`)\r\n      );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups()}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups()}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups()}\r\n          onAddPlace={handleAddPlace}\r\n        />\r\n        <ConfirmDeleteCardPopup\r\n          isOpen={isConfirmDeleteCardPopupOpen}\r\n          onClose={closeAllPopups()}\r\n        />\r\n        <ImagePopup\r\n          card={selectedCard}\r\n          isOpen={isImagePopupOpen}\r\n          onClose={closeAllPopups()}\r\n        />\r\n        <Main\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditProfile={handleEditProfileClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onCardClick={handleCardClick}\r\n          onLikeClick={handleCardLike}\r\n          onDeleteClick={handleCardDelete}\r\n          cards={cards}\r\n        />\r\n        <Footer />\r\n      </CurrentUserContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}